from dydx3.constants import API_HOST_GOERLI,API_HOST_MAINNET
from decouple import config

#!! SELECT MODE!!!

MODE ="DEVELOPMENT"

#CLOSE ALL OPEN POSITIONS AND ORDER
ABORT_ALL_POSITIONS = False

#FIND COINTEGRATED PAIRS
FIND_COINTEGRATED=False

#place trades
PLACE_TRADES=True


#resolution
RESOLUTION ="1HOUR"

#stats window 
WINDOW=21

#TRESHOLDSS - OPENING
MAX_HALF_LIFE = 24
ZSCORE_THRESH = 1.5
USD_PER_TRADE = 50
USD_MIN_COLLATERAL = 1880

#THRESHOLDS - CLOSSING
CLOSE_AT_ZSCORE_CROSS = True

#CONSTANTS  
ETHEREUM_ADDRESS = config("ETHEREUM_ADDRESS")
ETH_PRIVATE_KEY = config("ETH_PRIVATE_KEY")

#KEYS PRODUCTION (MAINNET)
STARK_PRIVATE_KEY_MAINNET = config("STARK_PRIVATE_KEY_MAINNET")
DYDX_API_KEY_MAINNET = config("DYDX_API_KEY_MAINNET")
DYDX_API_SECRET_MAINNET = config("DYDX_API_SECRET_MAINNET")
DYDX_API_PASSPHRASE_MAINNET = config("DYDX_API_PASSPHRASE_MAINNET")


#KEYS PRODUCTION (TESTNET)
STARK_PRIVATE_KEY_TESTNET = config("STARK_PRIVATE_KEY_TESTNET")
DYDX_API_KEY_TESTNET = config("DYDX_API_KEY_TESTNET")
DYDX_API_SECRET_TESTNET = config("DYDX_API_SECRET_TESTNET")
DYDX_API_PASSPHRASE_TESTNET = config("DYDX_API_PASSPHRASE_TESTNET")
#provider
HTTP_PROVIDER = config("HTTP_PROVIDER_MAINNET") if MODE=="PRODUCTION" else config("HTTP_PROVIDER_TESTNET")

#KEYS EXPORT
STARK_PRIVATE_KEY = STARK_PRIVATE_KEY_MAINNET if MODE=="PRODUCTION" else STARK_PRIVATE_KEY_TESTNET
DYDX_API_KEY = DYDX_API_KEY_MAINNET if MODE=="PRODUCTION" else DYDX_API_KEY_TESTNET
DYDX_API_SECRET = DYDX_API_SECRET_MAINNET if MODE=="PRODUCTION" else DYDX_API_SECRET_TESTNET
DYDX_API_PASSPHRASE = DYDX_API_PASSPHRASE_MAINNET if MODE=="PRODUCTION" else DYDX_API_PASSPHRASE_TESTNET

#HOST EXPORT
HOST = API_HOST_MAINNET if MODE=="PRODUCTION" else API_HOST_GOERLI



